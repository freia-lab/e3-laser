record(bi, "$(P)Laser:getBasicOK") {
   field(DTYP, "pydev")
   field(ZNAM, "ERROR")
   field(ONAM, "OK")
   field(ZSV, "INVALID")
   field(INP, "@laser.getBasic()")
   field(SCAN, "$(SCAN)")
}

record(mbbi, "$(P)Laser:sState") {
   field(PHAS, "1")
   field(DESC, "Laser state")
   field(DTYP, "pydev")
   field(INP, "@laser.getLaserState()")
   field(ZRVL, 1)
   field(ZRST, "Initializing")
   field(ZRSV, "MINOR")
   field(ONVL, 2)
   field(ONST, "Standby")
   field(ONSV, "NO_ALARM")
   field(TWVL, 3)
   field(TWST, "Housekeeping")
   field(TWSV, "MINOR")
   field(THVL, 4)
   field(THST, "Operational")
   field(THSV, "NO_ALARM")
   field(FRVL, 5)
   field(FRST, "Going to Standby")
   field(FRSV, "MINOR")
   field(FVVL, 6)
   field(FVST, "In field update")
   field(FVSV, "MINOR")
   field(SXVL, 7)
   field(SXST, "Service")
   field(SXSV, "MINOR")
   field(SVVL, 8)
   field(SVST, "Failure")
   field(SVSV, "MAJOR")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
   field(FLNK,  "$(P)Laser:sOn")
}

record(bi, "$(P)Laser:sShutterOpen") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(ZNAM, "Closed")
   field(ONAM, "Open")
   field(INP, "@laser.isShutterOpen()")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)Laser:sOutput") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(ZNAM, "Disabled")
   field(ONAM, "Enabled")
   field(INP, "@laser.isOutputEnabled()")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)Laser:sPwrLock") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(ZNAM, "Disabled")
   field(ONAM, "Enabled")
   field(INP, "@laser.isPwrLockEnabled()")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)Laser:sChirp") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(ZNAM, "Negative")
   field(ONAM, "Positive")
   field(INP, "@laser.chirpPos")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)Laser:sErr") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(ZNAM, "OK")
   field(ONAM, "Error")
   field(INP, "@laser.error")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)Laser:sWarn") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(ZNAM, "OK")
   field(ONAM, "Warning")
   field(INP, "@laser.warn")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)Laser:Harmonic:sRdV") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@laser.harmonic")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)Laser:BurstCnt:sRdV") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@laser.burst")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)Laser:PulseLength:sRdV") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@laser.plsDur")
   field(EGU, "fs")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)Laser:PpDivider:sRdV") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@laser.ppDivider")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)Laser:Atten:sRdV") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@laser.atten")
   field(EGU, "%")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)Laser:outFreq:sRdV-raw") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@laser.outputFreq")
   field(EGU, "kHz")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
   field(FLNK, "$(P)Laser:outFreq:sRdV") 
}
record(calc, "$(P)Laser:outFreq:sRdV") {
   field(INPA, "$(P)Laser:outFreq:sRdV-raw")
   field(PREC, "3")
   field(CALC, "A/1000.0")
   field(EGU, "kHz")
}

record(longin, "$(P)Laser:outEnergy:sRdV-raw") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@laser.outputEnergy")
   field(EGU, "µJ")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
   field(FLNK, "$(P)Laser:outEnergy:sRdV")
}
record(calc, "$(P)Laser:outEnergy:sRdV") {
   field(INPA, "$(P)Laser:outEnergy:sRdV-raw")
   field(EGU, "µJ")
   field(CALC, "A/10.0")
   field(PREC, "1")
}

record(longin, "$(P)Laser:outPwr:sRdV-raw") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@laser.outputPwr")
   field(EGU, "W")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)Laser:getBasicOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
   field(FLNK,  "$(P)Laser:outPwr:sRdV")
}

record(calc, "$(P)Laser:outPwr:sRdV") {
   field(INPA, "$(P)Laser:outPwr:sRdV-raw")
   field(EGU, "W")
   field(PREC, "3")
   field(CALC, "A/1000.0")
}

############ Commands ##########

record(longout, "$(P)Laser:Ctrl:Debug:cSetV") {
   field(DESC, "Debug output level")
   field(DTYP, "pydev")
   field(OUT, "@laser.debug=VAL")
}

######### Help records ########

# For calculating operation time
record(calc,  "$(P)Laser:sOn") {
    field(INPA, "$(P)Laser:sState")
    field(CALC, "A=3?1:0")
}

# For showinfg the laser status
record(calc, "$(P)Laser:VisuState") {
   field(PHAS, "1")
   field(DESC, "Laser symbol state")
   field(SCAN, "$(SCAN)")
   field(INPA, "$(P)Laser:sState")
   field(INPB,  "$(P)Outputs:MainLaser:sOn")
   field(INPC,  "$(P)Outputs:Uncompressed:sOn")
   field(CALC, "A#3?0:(((B=1)||(C=1))?2:0)")
   field(FLNK,  "$(P)Laser:VisuStateStr")
}
record(mbbi, "$(P)Laser:VisuStateStr") {
   field(DESC, "Laser symbol text")
   field(INP, "$(P)Laser:VisuState")
   field(ZRVL, 0)
   field(ZRST, "Beam Off")
   field(ONVL, 1)
   field(ONST, "Beam Rdy")
   field(TWVL, 2)
   field(TWST, "Beam On")
}
