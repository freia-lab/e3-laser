record(bi, "$(P)EPP:getStatusOK") {
   field(DTYP, "pydev")
   field(ZNAM, "ERROR")
   field(ONAM, "OK")
   field(ZSV, "INVALID")
   field(INP, "@epp.getStatus()")
   field(SCAN, "$(SCAN)")
}

record(bi, "$(P)EPP:Output-1:sOn") {
   field(DTYP, "pydev")
   field(ZNAM, "Closed")
   field(ONAM, "Open")
   field(INP, "@epp.output1Open")
   field(SCAN, "$(SCAN)")
   field(PHAS, "1")
   field(SDIS, "$(P)EPP:getStatusOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)EPP:Atten-1:sRdV") {
   field(DTYP, "pydev")
   field(INP, "@epp.atten1")
   field(SCAN, "$(SCAN)")
   field(PHAS, "1")
   field(SDIS, "$(P)EPP:getStatusOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)EPP:Picker-1:sRdV") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@epp.picker1Val")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)EPP:getStatusOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)EPP:Output-2:sOn") {
   field(DTYP, "pydev")
   field(ZNAM, "Closed")
   field(ONAM, "Open")
   field(INP, "@epp.output2Open")
   field(SCAN, "$(SCAN)")
   field(PHAS, "1")
   field(SDIS, "$(P)EPP:getStatusOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)EPP:Atten-2:sRdV") {
   field(DTYP, "pydev")
   field(INP, "@epp.atten2")
   field(SCAN, "$(SCAN)")
   field(PHAS, "1")
   field(SDIS, "$(P)EPP:getStatusOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)EPP:Picker-2:sRdV") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@epp.picker2Val")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)EPP:getStatusOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

############ Helper records ##########

# Attenuation
record(calc, "$(P)EPP:Throughput-1:sRdV") {
   field(SCAN, "$(SCAN)")
   field(DESC, "Throughput")
   field(EGU, "%")
   field(PREC, "2")
   field(INPA, "$(P)EPP:Picker-1:sRdV")
   field(CALC, "A=0?100:100*(A-1)/A")
}

############ Commands ##########

record(longout, "$(P)EPP:Ctrl:Debug:cSetV") {
   field(DESC, "Debug output level")
   field(DTYP, "pydev")
   field(OUT, "@epp.debug=VAL")
}
