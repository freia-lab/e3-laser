record(bi, "$(P)OPA:getShutterStateOK") {
   field(DTYP, "pydev")
   field(ZNAM, "ERROR")
   field(ONAM, "OK")
   field(ZSV, "INVALID")
   field(INP, "@opa.getShutterState()")
   field(SCAN, "$(SCAN)")
}

record(bi, "$(P)OPA:sShutterOpen") {
   field(DTYP, "pydev")
   field(ZNAM, "Closed")
   field(ONAM, "Open")
   field(INP, "@opa.shutterOpen")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getShutterStateOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)OPA:sShutterOpenIgnored") {
   field(DTYP, "pydev")
   field(ZNAM, "Obeyed")
   field(ONAM, "Ignored")
   field(OSV, "MINOR")
   field(INP, "@opa.shutterOpenIgnored")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getShutterStateOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}
record(bi, "$(P)OPA:sShutterForceClosed") {
   field(DTYP, "pydev")
   field(ZNAM, "No")
   field(ONAM, "Yes")
   field(OSV, "MINOR")
   field(INP, "@opa.shutterForceClosed")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getShutterStateOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}


record(bi, "$(P)OPA:sInterlock") {
   field(DTYP, "pydev")
   field(ONAM, "Fault")
   field(OSV, "MAJOR")
   field(ZNAM, "OK")
   field(INP, "@opa.interlockOpen")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getShutterStateOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)OPA:sConn2Laser") {
   field(DTYP, "pydev")
   field(ZNAM, "Error")
   field(ZSV, "MAJOR")
   field(ONAM, "OK")
   field(INP, "@opa.conn2laserOK")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getShutterStateOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)OPA:sCtrlByLaser") {
   field(DTYP, "pydev")
   field(ZNAM, "No")
   field(ONAM, "Yes")
   field(INP, "@opa.ctrlByLaser")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getShutterStateOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)OPA:sLaserSynced") {
   field(DTYP, "pydev")
   field(ZNAM, "No")
   field(ONAM, "Yes")
   field(INP, "@opa.laserOutputSynced")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getShutterStateOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)OPA:sCtrlConfigOK") {
   field(DTYP, "pydev")
   field(ZNAM, "Config Err")
   field(ZSV, "MAJOR")
   field(ONAM, "Config OK")
   field(INP, "@opa.ctrlConfiguration")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getShutterStateOK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

######### Smooth wavesetter system ##########

record(bi, "$(P)OPA:getSWS_OK") {
   field(DTYP, "pydev")
   field(ZNAM, "ERROR")
   field(ONAM, "OK")
   field(ZSV, "INVALID")
   field(INP, "@opa.getWavelengthSetterStatus()")
   field(SCAN, "$(SCAN)")
}

record(bi, "$(P)OPA:SWS:sOn") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(ZNAM, "Off")
   field(ONAM, "On")
   field(INP, "@opa.SWS_On")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getSWS_OK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(bi, "$(P)OPA:SWS:sStopScheduled") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(ZNAM, "No")
   field(ONAM, "Yes")
   field(INP, "@opa.SWS_StopScheduled")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getSWS_OK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)OPA:SWS:RepeatsLeft:sRdV") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@opa.SWS_RepeatsLeft")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getSWS_OK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)OPA:SWS:SweepRt:sRdV") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@opa.SWS_SweepRate")
   field(EGU, "nm/s")
#   field(PREC, "1")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getSWS_OK.VAL NPP MS")
   field(DISV, "-1") # Will never disable, but will propagate severity
}


######### Optical system ####################

record(bi, "$(P)OPA:getOpticalSystemStatusOK") {
   field(DTYP, "pydev")
   field(ZNAM, "ERROR")
   field(ONAM, "OK")
   field(ZSV, "INVALID")
   field(INP, "@opa.getOpticalSystemStatus()")
   field(SCAN, "$(SCAN)")
}

record(ai, "$(P)OPA:Wavelength1:sRdV") {
#   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@opa.getOutputWavelength()")
   field(EGU, "nm")
#   field(PREC, "1")
   field(SCAN, "$(SCAN)")
#   field(SDIS, "$(P)OPA:getOpticalSystemStatusOK.VAL NPP MS")
#  field(DISV, "-1") # Will never disable, but will propagate severity
}

record(longin, "$(P)OPA:Wavelength:sRdV") {
   field(PHAS, "1")
   field(DTYP, "pydev")
   field(INP, "@opa.wavelength")
   field(EGU, "nm")
#   field(PREC, "1")
   field(SCAN, "$(SCAN)")
   field(SDIS, "$(P)OPA:getOpticalSystemStatusOK.VAL NPP MS")
  field(DISV, "-1") # Will never disable, but will propagate severity
}


############ Commands ##########

record(longout, "$(P)OPA:Ctrl:Debug:cSetV") {
   field(DESC, "Debug output level")
   field(DTYP, "pydev")
   field(OUT, "@opa.debug=VAL")
}
